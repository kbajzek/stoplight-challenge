{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbajzek/Documents/vscode-current/stoplight-challenge/src/components/Stoplight/Stoplight.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './Stoplight.module.css';\nimport Light from '../Light/Light';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stoplight = () => {\n  _s();\n  const sequence = [{\n    color: 'green',\n    duration: 3\n  }, {\n    color: 'yellow',\n    duration: 1\n  }, {\n    color: 'red',\n    duration: 2\n  }];\n  const [currentSequence, setCurrentSequence] = useState({\n    index: 0,\n    count: 0\n  });\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (currentSequence.count === sequence[currentSequence.index].duration) {\n        setCurrentSequence({\n          index: currentSequence.index === sequence.length ? 0 : currentSequence.index + 1,\n          count: 1\n        });\n      } else {\n        setCurrentSequence({\n          index: currentSequence.index,\n          count: currentSequence.count + 1\n        });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.general,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stoplight,\n      children: [/*#__PURE__*/_jsxDEV(Light, {\n        on: currentSequence.index,\n        type: 'red'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Light, {\n        on: true,\n        type: 'yellow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Light, {\n        on: true,\n        type: 'green'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Stoplight, \"bu0NHrdIBj+m7MoFqDyaICvFdIc=\");\n_c = Stoplight;\nexport default Stoplight;\nvar _c;\n$RefreshReg$(_c, \"Stoplight\");","map":{"version":3,"names":["React","styles","Light","jsxDEV","_jsxDEV","Stoplight","_s","sequence","color","duration","currentSequence","setCurrentSequence","useState","index","count","useEffect","interval","setInterval","length","clearInterval","className","general","children","stoplight","on","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevinbajzek/Documents/vscode-current/stoplight-challenge/src/components/Stoplight/Stoplight.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './Stoplight.module.css';\nimport Light from '../Light/Light';\n\nconst Stoplight = () => {\n\n  const sequence = [\n    { color: 'green', duration: 3 },\n    { color: 'yellow', duration: 1 },\n    { color: 'red', duration: 2 }\n  ]\n  const [currentSequence, setCurrentSequence] = useState({ index: 0, count: 0 });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if(currentSequence.count === sequence[currentSequence.index].duration){\n        setCurrentSequence({ \n          index: currentSequence.index === sequence.length ? 0 : currentSequence.index + 1,\n          count: 1\n        })\n      }else{\n        setCurrentSequence({\n          index: currentSequence.index,\n          count: currentSequence.count + 1\n        })\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className={styles.general}>\n      <div className={styles.stoplight}>\n        <Light on={currentSequence.index} type={'red'} />\n        <Light on={true} type={'yellow'} />\n        <Light on={true} type={'green'} />\n      </div>\n    </div>\n  )\n}\n\nexport default Stoplight;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAMC,QAAQ,GAAG,CACf;IAAEC,KAAK,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAE,CAAC,EAC/B;IAAED,KAAK,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAE,CAAC,EAChC;IAAED,KAAK,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAC9B;EACD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAE9EC,SAAS,CAAC,MAAM;IACd,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAGP,eAAe,CAACI,KAAK,KAAKP,QAAQ,CAACG,eAAe,CAACG,KAAK,CAAC,CAACJ,QAAQ,EAAC;QACpEE,kBAAkB,CAAC;UACjBE,KAAK,EAAEH,eAAe,CAACG,KAAK,KAAKN,QAAQ,CAACW,MAAM,GAAG,CAAC,GAAGR,eAAe,CAACG,KAAK,GAAG,CAAC;UAChFC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC,MAAI;QACHH,kBAAkB,CAAC;UACjBE,KAAK,EAAEH,eAAe,CAACG,KAAK;UAC5BC,KAAK,EAAEJ,eAAe,CAACI,KAAK,GAAG;QACjC,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM;MACXK,aAAa,CAACH,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKgB,SAAS,EAAEnB,MAAM,CAACoB,OAAQ;IAAAC,QAAA,eAC7BlB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACsB,SAAU;MAAAD,QAAA,gBAC/BlB,OAAA,CAACF,KAAK;QAACsB,EAAE,EAAEd,eAAe,CAACG,KAAM;QAACY,IAAI,EAAE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDzB,OAAA,CAACF,KAAK;QAACsB,EAAE,EAAE,IAAK;QAACC,IAAI,EAAE;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCzB,OAAA,CAACF,KAAK;QAACsB,EAAE,EAAE,IAAK;QAACC,IAAI,EAAE;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAvB,EAAA,CArCKD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}